3.1: Joins and Subqueries
1. Write a query which displays Staff Name, Department Code, Department Name, and Salary for all staff who earns more than 20000.

ans:SQL> select s.staff_name,d.dept_code,d.dept_name,s.staff_sal from staff_master s,department_master d where d.dept_code=s.dept_code and s.staff_sal>20000;

STAFF_NAME                                          DEPT_CODE DEPT_NAME                                   STAFF_SAL
-------------------------------------------------- ---------- -------------------------------------------------- ----------
Mohan                                                      10 Computer Science                                24000
John                                                       10 Computer Science                                32000
Allen                                                      30 Electronics                                     42000
Smith                                                      20 Electricals                                     62000
Rahul                                                      20 Electricals                                     22000
Ram                                                        30 Electronics                                     32000
2. Display Staff Code, Staff Name, Department Name, and his manager’s number and name. Label the columns Staff#, Staff, Mgr#, Manager.
3. Create a query that will display Student Code, Student Name, Book Code, and Book Name for all students whose expected book return date is today.
4. Create a query that will display Staff Code, Staff Name, Department Name, Designation name, Book Code, Book Name, and Issue Date for only those staff who have taken any book in last 30 days. . If required, make changes to the table to create such a scenario.
5. Generate a report which contains the following information.
Staff Code, Staff Name, Designation Name, Department, Book Code, Book Name,

Author, Fine For the staff who has not returned the book. Fine will be calculated as Rs. 5 per day.
Fine = 5 * (No. of days = Current Date – Expected return date). Include records in the table to suit this problem statement
6. List Staff Code, Staff Name, and Salary for those who are getting less than the average salary of organization.
7. Display Author Name, Book Name for those authors who wrote more than one book.
ORACLE (DBMS SQL) LAB BOOK

8. Display Staff Code, Staff Name, and Department Name for those who have taken more than one book.
9. Display the Student Code, Student Name, and Department Name for that department in which there are maximum number of student studying.
10. Display Staff Code, Staff Name, Department Name, and Designation name for those who have joined in last 3 months.
11. Display the Manager Name and the total strength of his/her team.
12. Display the details of books that have not been returned and expected return date was last Monday. Book name should be displayed in proper case.. Hint: You can change /add records so that the expected return date suits this problem statement
13. Write a query to display number of people in each Department. Output should display Department Code, Department Name and Number of People.




4.1: Database Objects
1. Create the Customer table with the following columns.
CustomerId Number(5)
Cust_Name varchar2(20)
Address1 Varchar2(30)
Address2 Varchar2(30)

ans:SQL> create table customer(customerId number(5),Cust_name varchar2(20),address1 varchar2(30),address2 varchar2(30));

Table created.

2. Modify the Customer table Cust_Name column of datatype with Varchar2(30), rename the column to CustomerName and it should not accept Nulls.

ans:alter table customer modify cust_name varchar2(30);

Table altered.

SQL> alter table customer rename column Cust_name to customername;

Table altered.
SQL> alter table customer modify(customername NOT NULL);

Table altered.
3. a) Add the following Columns to the Customer table.
Gender Varchar2(1)
Age Number(3)
PhoneNo Number(10)
ans:
SQL> alter table customer add gender varchar2(1);

Table altered.

SQL> alter table customer add phoneno number(10);

Table altered.

SQL> alter table customer add age number(3);

Table altered.

b) Rename the Customer table to Cust_Table
 ans:
SQL> alter table customer rename column Cust_name to customername;

Table altered.

4. Insert rows with the following data in to the Customer table.
Insert into customer values: (1000, ‘Allen’, ‘#115 Chicago’, ‘#115 Chicago’, ‘M’, ‘25, 7878776’)
In similar manner, add the below records to the Customer table:
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525

ans:
Insert into cust_table values (1000, 'Allen', '#115 Chicago','#115 Chicago','M',7878776,25);

1 row created.
SQL> insert into cust_table values(1001, 'George', '#116 France', '#116 France', 'M', 434524,25);

1 row created.

SQL> insert into cust_table values(1002, 'Becker', '#114 New York', '#114 New York', 'M',  431525,45);

1 row created.

SQL> select*from cust_table;

CUSTOMERID CUSTOMERNAME                   ADDRESS1                       ADDRESS2                    G    PHONENO           AGE
---------- ------------------------------ ------------------------------ ------------------------------ - ---------- ----------
      1001 George                         #116 France                    #116 France                 M     434524            25
      1000 Allen                          #115 Chicago                   #115 Chicago                M    7878776            25
      1002 Becker                         #114 New York                  #114 New York               M     431525            45

5. Add the Primary key constraint for Customerld with the name Custld_Prim.

SQL> alter table cust_table add constraint pk_Custld primary key (customerid);

Table altered.

6. Insert the row given below in the Customer table and see the message generated by the Oracle server.
1002, John, #114 Chicago, #114 Chicago, M, 45, 439525

ans: SQL> insert into cust_table values(1002,' John',' #114 Chicago', '#114 Chicago', 'M',  439525,45);
insert into cust_table values(1002,' John',' #114 Chicago', '#114 Chicago', 'M',  439525,45)
*
ERROR at line 1:
ORA-00001: unique constraint (SYSTEM.PK_CUSTLD) violated

7. Disable the constraint on CustomerId, and insert the following data:
1002, Becker, #114 New York, #114 New york , M, 45, 431525
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525

ans:
SQL> alter table cust_table disable constraint pk_Custld;

Table altered.

SQL> insert into cust_table values(1002,' Becker',' #114 New York', '#114 New york ', 'M', 431525,45);

1 row created.

SQL> insert into cust_table values(1003,' Nanapatekar',' #115 India',' #115 India ', 'M', 431525,45);

1 row created.

SQL> select*from cust_table;

CUSTOMERID CUSTOMERNAME                   ADDRESS1                       ADDRESS2                    G    PHONENO           AGE
---------- ------------------------------ ------------------------------ ------------------------------ - ---------- ----------
      1001 George                         #116 France                    #116 France                 M     434524            25
      1000 Allen                          #115 Chicago                   #115 Chicago                M    7878776            25
      1002 Becker                         #114 New York                  #114 New York               M     431525            45
      1002  Becker                         #114 New York                 #114 New york               M     431525            45
      1003  Nanapatekar                    #115 India                     #115 India                 M     431525            45
8. Enable the constraint on CustomerId of the Customer table, and see the message generated by the Oracle server.
ans:

SQL> alter table cust_table enable constraint  pk_Custld;
alter table cust_table enable constraint  pk_Custld
*
ERROR at line 1:
ORA-02437: cannot validate (SYSTEM.PK_CUSTLD) - primary key violated
9. Drop the constraint Custld_Prim on CustomerId and insert the following Data. Alter Customer table, drop constraint Custid_Prim.
1002, Becker, #114 New York, #114 New york , M, 45, 431525, 15000.50
1003, Nanapatekar, #115 India, #115 India , M, 45, 431525, 20000.50
10. Delete all the existing rows from Customer table, and let the structure remain itself using TRUNCATE statement.

ans:
SQL> truncate table cust_table;

Table truncated.

11. In the Customer table, add a column E_mail.

ans:
SQL> alter table Cust_table add E_mail varchar2(30);

Table altered.

SQL> desc cust_table;
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 CUSTOMERID                                         NUMBER(5)
 CUSTOMERNAME                              NOT NULL VARCHAR2(30)
 ADDRESS1                                           VARCHAR2(30)
 ADDRESS2                                           VARCHAR2(30)
 GENDER                                             VARCHAR2(1)
 PHONENO                                            NUMBER(10)
 AGE                                                NUMBER(3)
 E_MAIL                                             VARCHAR2(30)

12. Drop the E_mail column from Customer table.
13. Create the Suppliers table based on the structure of the Customer table. Include only the CustomerId, CustomerName, Address1, Address2, and phoneno columns.
Name the columns in the new table as SuppID, SName, Addr1, Addr2, and Contactno respectively.
14. Drop the above table and recreate the following table with the name CustomerMaster.
CustomerId Number(5) Primary key(Name of constraint is CustId_PK)
CustomerName Varchar2(30) Not Null
ORACLE (DBMS SQL) LAB BOOK
©2016 Capgemini. All rights reserved.
The information contained in this document is proprietary and confidential. For Capgemini only. | 16 / 27
Capgemini Internal
Addressl Varchar2(30) Not Null
Address2 Varchar2(30)
Gender Varchar2(l)
Age Number(3)
PhoneNo Number(10)
15. Create the AccountsMaster table with the following Columns. Use sequence to generate Account number
Customerld Number(5)
AccountNumber Number(10,2) Primary key(Name of constraint is Acc_PK)
AccountType Char(3)
LedgerBalance Number(10,2) Not Null
16. Relate AccountsMaster table and CustomerMaster table through Customerld column with the constraint name Cust_acc.
17. Insert the following rows to the CustomerMaster table:
1000, Allen, #115 Chicago, #115 Chicago, M, 25, 7878776
1001, George, #116 France, #116 France, M, 25, 434524
1002, Becker, #114 New York, #114 New York, M, 45, 431525
18. Modify the AccountMaster table with the Check constraint to ensure AccountType should be either NRI or IND.
19. Modify the AccountsMaster table keeping a Check constraint with the name Balance_Check for the Minimum Balance which should be greater than 5000.
20. Modify the AccountsMaster table such that if Customer is deleted from Customer table then all his details should be deleted from AccountsMaster table.
21. Create Backup copy for the AccountsMaster table with the name ‘AccountDetails’.
22. Create a view ‘Acc_view’ with columns Customerld, CustomerName, AccountNumber, AccountType, and LedgerBalance from AccountsMaster. In the view Acc_view, the column names should be CustomerCode,
AccountHolderName, AccountNumber, Type, and Balance for the respective columns from AccountsMaster table.
23. Create a view on AccountsMaster table with name vAccs_Dtls. This view should list all customers whose AccountType is ‘IND’ and their balance amount should not be less than 10000. Using this view any DML operation should not violate the view conditions.
Hint: Use the With Check Option constraint.
24. Create a view accsvw10 which will not allow DML statement against it.
25. Create a Sequence with the name Seq_Dept on Deptno column of Department_Masters table. It should start from 40 and stop at 200. Increment parameter for the sequence Seq_Dept should be in step of 10.
26. Insert three sample rows by using the above sequence in Department_Masters table.
27. Drop the Seq_Dept sequence.
28. Get information on the index No_Name from the Data Dictionary.
29. Create synonym synEmp for the EMP table.
30. Get Information on synonym synEmp from the Data Dictionary.
31. Note: Perform this after creating the Employee Table mentioned in the next Lab assignment. Create Index on HireDate column and give the name as idx_emp_hiredate for this object.
32. Create a Sequence with the name Seq_Emp on Empno column of Employee table. It should start from 1001. Try to set Minimum value for this sequence which is less than / greater than 1001, use the sequence to generate Empno while inserting records in Employee table and check the values generated.
